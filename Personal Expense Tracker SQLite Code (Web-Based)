from flask import Flask, render_template, request, redirect, url_for
import sqlite3

app = Flask(__name__)

# Function to initialize the database
def init_db():
    with sqlite3.connect("expenses.db") as conn:
        c = conn.cursor()
        c.execute('''CREATE TABLE IF NOT EXISTS expenses 
                     (id INTEGER PRIMARY KEY AUTOINCREMENT, category TEXT, amount REAL, date TEXT)''')
        conn.commit()

# Route for the homepage (show all expenses)
@app.route('/')
def index():
    with sqlite3.connect("expenses.db") as conn:
        c = conn.cursor()
        c.execute("SELECT * FROM expenses ORDER BY date DESC")
        expenses = c.fetchall()
    return render_template('index.html', expenses=expenses)

# Route to add an expense
@app.route('/add', methods=['POST'])
def add_expense():
    category = request.form['category']
    amount = request.form['amount']
    date = request.form['date']

    if category and amount and date:  # Ensure all fields are filled
        try:
            amount = float(amount)  # Validate amount
            with sqlite3.connect("expenses.db") as conn:
                c = conn.cursor()
                c.execute("INSERT INTO expenses (category, amount, date) VALUES (?, ?, ?)", (category, amount, date))
                conn.commit()
        except ValueError:
            pass  # Handle invalid input gracefully
    return redirect(url_for('index'))

# Route to delete an expense
@app.route('/delete/<int:expense_id>')
def delete_expense(expense_id):
    with sqlite3.connect("expenses.db") as conn:
        c = conn.cursor()
        c.execute("DELETE FROM expenses WHERE id = ?", (expense_id,))
        conn.commit()
    return redirect(url_for('index'))

# Run the app
if __name__ == '__main__':
    init_db()  # Initialize database on startup
    app.run(debug=True)
